{% extends 'base.html.twig' %}

{% block title %}Jouer au quiz - {{ quiz.titre }}{% endblock %}

{% block body %}
<div class="container py-4">
    <h1 class="mb-4">{{ quiz.titre }}</h1>
    
    <div id="quiz-container">
        <div class="card mb-4">
            <div class="card-body">
                <div id="question-container">
                    <p class="lead">Chargement de la question...</p>
                </div>
                
                <div id="choices-container" class="mt-4">
                    <!-- Les choix seront chargés ici -->
                </div>
            </div>
        </div>
        
        <div class="d-flex justify-content-between mb-4">
            <button id="prev-btn" class="btn btn-secondary" disabled>Précédent</button>
            <div>
                Question <span id="current-question">1</span> / <span id="total-questions">{{ quiz.quizQuestions|length }}</span>
            </div>
            <button id="next-btn" class="btn btn-primary">Suivant</button>
        </div>
        
        <form id="quiz-form" action="{{ path('app_quiz_submit', {id: quiz.id}) }}" method="POST" class="d-none">
            <div id="answers-container">
                <!-- Les réponses seront stockées ici -->
            </div>
            <button type="submit" class="btn btn-success btn-lg">Terminer le quiz</button>
        </form>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const quizId = {{ quiz.id }};
        const totalQuestions = {{ quiz.quizQuestions|length }};
        let currentQuestion = 1;
        let answers = {};
        
        const questionContainer = document.getElementById('question-container');
        const choicesContainer = document.getElementById('choices-container');
        const currentQuestionSpan = document.getElementById('current-question');
        const totalQuestionsSpan = document.getElementById('total-questions');
        const prevBtn = document.getElementById('prev-btn');
        const nextBtn = document.getElementById('next-btn');
        const quizForm = document.getElementById('quiz-form');
        const answersContainer = document.getElementById('answers-container');
        
        // Charger la première question
        loadQuestion(currentQuestion);
        
        // Gestionnaire d'événement pour le bouton Précédent
        prevBtn.addEventListener('click', function() {
            if (currentQuestion > 1) {
                currentQuestion--;
                loadQuestion(currentQuestion);
                updateNavButtons();
            }
        });
        
        // Gestionnaire d'événement pour le bouton Suivant
        nextBtn.addEventListener('click', function() {
            if (currentQuestion < totalQuestions) {
                currentQuestion++;
                loadQuestion(currentQuestion);
                updateNavButtons();
            } else {
                // Afficher le formulaire de soumission
                prepareSubmission();
            }
        });
        
        // Fonction pour charger une question
        function loadQuestion(order) {
            fetch(`/api/quiz/${quizId}/question/${order}`)
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        questionContainer.innerHTML = `<p class="text-danger">${data.error}</p>`;
                        return;
                    }
                    
                    const question = data.question;
                    
                    // Afficher la question
                    questionContainer.innerHTML = `<h3>${question.texte}</h3>`;
                    
                    // Afficher les choix
                    let choicesHtml = '<div class="list-group">';
                    question.choices.forEach(choice => {
                        const isChecked = answers[question.id] === choice.id ? 'checked' : '';
                        choicesHtml += `
                            <label class="list-group-item">
                                <input type="radio" name="choice_${question.id}" value="${choice.id}" ${isChecked} class="form-check-input me-2">
                                ${choice.texte}
                            </label>
                        `;
                    });
                    choicesHtml += '</div>';
                    choicesContainer.innerHTML = choicesHtml;
                    
                    // Ajouter un écouteur d'événement pour les choix
                    document.querySelectorAll(`input[name="choice_${question.id}"]`).forEach(radio => {
                        radio.addEventListener('change', function() {
                            answers[question.id] = parseInt(this.value);
                        });
                    });
                    
                    // Mettre à jour le numéro de question actuelle
                    currentQuestionSpan.textContent = order;
                })
                .catch(error => {
                    console.error('Erreur lors du chargement de la question:', error);
                    questionContainer.innerHTML = '<p class="text-danger">Erreur lors du chargement de la question. Veuillez réessayer.</p>';
                });
        }
        
        // Fonction pour mettre à jour l'état des boutons de navigation
        function updateNavButtons() {
            prevBtn.disabled = currentQuestion === 1;
            nextBtn.textContent = currentQuestion < totalQuestions ? 'Suivant' : 'Terminer';
        }
        
        // Fonction pour préparer la soumission du quiz
        function prepareSubmission() {
            // Créer les champs cachés pour les réponses
            answersContainer.innerHTML = '';
            
            for (const questionId in answers) {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = `answers[${questionId}]`;
                input.value = answers[questionId];
                answersContainer.appendChild(input);
            }
            
            // Cacher l'interface de quiz et afficher le formulaire
            document.getElementById('quiz-container').querySelector('.card').style.display = 'none';
            document.querySelector('.d-flex.justify-content-between').style.display = 'none';
            quizForm.classList.remove('d-none');
        }
    });
</script>
{% endblock %}